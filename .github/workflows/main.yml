# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python Nomad Test and Publish

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  registry_package:
    types: [published]
  release:
    types: [created, published, released]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NOMAD_IP: '127.0.0.1'
      NOMAD_PORT: '4646'
      NOMAD_LATEST: '1.1.18'

    strategy:
      fail-fast: false
      matrix:
        python-version: ['2.7', '3.7', '3.10']
        nomad-version: ['1.0.0', '1.1.18']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Nomad ${{ matrix.nomad-version }}
      env:
        NOMAD_VERSION: ${{ matrix.nomad-version }}
      shell: bash
      run: |
        echo $NOMAD_VERSION
        echo ${NOMAD_VERSION}

        echo "downloading nomad"
        curl -L -o /tmp/nomad_${NOMAD_VERSION}_linux_amd64.zip https://releases.hashicorp.com/nomad/${NOMAD_VERSION}/nomad_${NOMAD_VERSION}_linux_amd64.zip

        echo "unzip nomad"
        unzip -d /tmp /tmp/nomad_${NOMAD_VERSION}_linux_amd64.zip

        echo "starting nomad server"
        /tmp/nomad agent -dev -bind ${NOMAD_IP} -node pynomad1 --acl-enabled > /dev/null 2>&1 &
        sleep 30
    - name: Install Dependencies
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      shell: bash
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ $PYTHON_VERSION = "2.7" ]; then
          pip install -r requirements-dev-py27.txt
        else
          pip install -r requirements-dev.txt
        fi
    - name: Before Tests
      shell: bash
      run: |
        /tmp/nomad init
        /tmp/nomad run -output example.nomad > example.json
    - name: Unit and Integration Tests
      env:
        NOMAD_VERSION: ${{ matrix.nomad-version }}
      shell: bash
      run: |
        py.test --cov=nomad --cov-report=term-missing --runxfail tests/
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
    - name: Create Package
      shell: bash
      run: |
        python -m pip install build
        python -m build --sdist --wheel
    - name: Publish/Release Package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
